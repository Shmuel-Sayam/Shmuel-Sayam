import time
from netmiko import ConnectHandler
from netmiko.ssh_exception import NetMikoTimeoutException
from netmiko.ssh_exception import AuthenticationException
import json

start_time = time.time()
end_time = time.time()

def nl():
    print("\n")

username = input("Username: ")
password = input("Password: ")

with open("ip_address.txt", "r") as CISCO_IP:
    IP_ADDR = CISCO_IP.read().splitlines()

for ip in IP_ADDR:
    devices = {
        "device_type": "cisco_ios",
        "ip": ip,
        "username": username,
        "password": password,
        "fast_cli": True
    }

    try:
        net_connect = ConnectHandler(**devices)
        name = net_connect.find_prompt().strip("#")
        print(f"\n{'-' * 40}\n Connecting to Device: {name}\n{'-' * 40} \n")
        ter_len = net_connect.send_command("term length 0")
        show_version = net_connect.send_command("show version")
        show_CDP_TFSM = net_connect.send_command("show cdp neighbors detail", use_textfsm=True)
        # print(show_CDP_TFSM)
        # print(show_IP_TFSM)

        s = json.dumps(show_CDP_TFSM)
        for data in show_CDP_TFSM:
            print("NEIGHBOR NAME".ljust(18) + ":  " + data["destination_host"])
            print("IP".ljust(18) + ": " + data["management_ip"])
            print("Device model".ljust(18) + ":  " + data["platform"])
            nl()

            with open("./device outputs.txt", "a") as outputs:
                outputs.write("NEIGHBOR NAME".ljust(18) + ":  " + data["destination_host"] + "\n")
                outputs.write("IP".ljust(18) + ":  " + data["management_ip"] + "\n")
                outputs.write("Device model".ljust(18) + ":  " + data["platform"] + "\n")
                outputs.write("\n")

        time.sleep(1)
        net_connect.disconnect()

    except AuthenticationException:
        print("\n        [-]  {ip} - Authentication Failure. ")

    except NetMikoTimeoutException:
        print("\n        [-]  {ip} - SSH Timeout. ")

    except AttributeError:
        print("\n *** Regex Parsing Error. Please Re-Check The Script. ***")

    # except ValueError:
    #     print("\n        [-]  {ip} - UNKNOWN ERROR. ")


print("\n" + "#" * 45)
print("        Finished Executing Script")
print("        Total Time - %d Seconds" % (time.time() - start_time))
print("#" * 45 + "\n")
